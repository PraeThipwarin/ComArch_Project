        lw      0       1       n        # n -> $1
        lw      0       2       r        # r -> $2
        lw      0       5       stack    # stack pointer
        lw      0       6       combadr  # address of comb()
        jalr    6       7                # call comb(n, r)
        halt

comb    sw      5       7       0        # push return addr
        addi    5       5       1
        sw      5       1       0        # push n
        addi    5       5       1
        sw      5       2       0        # push r
        addi    5       5       1

        beq     2       0       base     # if r==0 -> base
        beq     1       2       base     # if n==r -> base

        addi    1       1      -1        # n-1
        lw      0       6       combadr
        jalr    6       7                # comb(n-1, r)
        sw      5       3       0        # save result1
        addi    5       5       1

        lw      5       2      -1        # restore r
        lw      5       1      -2        # restore n
        addi    1       1      -1        # n-1
        addi    2       2      -1        # r-1
        lw      0       6       combadr
        jalr    6       7                # comb(n-1, r-1)

        lw      5       4      -1        # result1
        add     3       3       4        # result = res1 + res2
        beq     0       0       done

base    lw      0       3       one      # result = 1

done    addi    5       5      -1
        lw      5       2       0
        addi    5       5      -1
        lw      5       1       0
        addi    5       5      -1
        lw      5       7       0
        jalr    7       0

n       .fill   7
r       .fill   3
one     .fill   1
combadr .fill   comb
stack   .fill   0
